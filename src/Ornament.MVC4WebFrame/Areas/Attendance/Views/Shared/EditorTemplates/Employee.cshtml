@using System.Linq;
@using System.Linq.Expressions;
@using Ornament.MVCWebFrame.Areas.Attendance.Models
@using Qi
@using Qi.Attendance
@model Qi.Attendance.Employee
@Html.HiddenFor(model => model.Id)
@{
    var groups = (System.Collections.Generic.IEnumerable<Qi.Attendance.EmployeeGroup>)ViewBag.Groups;
}
<div class="control-group">
    @Html.LabelFor(s => s.Name, new { @class = "control-label" })
    <div class="controls">
        @Html.TextBoxFor(s => s.Name, new { placeholder = "雇员名称" }) @Html.ValidationMessageFor(s => s.Name)
    </div>
</div>
<div class="control-group">
    <label class="control-label">
        雇员状态</label>
    <div class="controls">
        <select name="EmployeeState">
            @foreach (var val in EnumHelper.GetDescriptionList<EmployeeState>())
            {
                if (val.Value == EmployeeState.Employed)
                {
                <option value="@val.Value" selected="selected">@val.Key</option>
                }
                else
                {
                <option value="@val.Value">@val.Key</option>
                }
            }
        </select>
    </div>
</div>
<div class="control-group">
    @Html.LabelFor(s => s.EmployeeGroup, new { @class = "control-label" })
    <div class="controls">
        @Html.DropDownListFor(s => s.EmployeeGroup, from eg in groups
                                                    select new SelectListItem()
                                                        {
                                                            Text = eg.Name,
                                                            Value = eg.Id.ToString(),
                                                            Selected = this.Model != null && eg.Equals(this.Model.EmployeeGroup)

                                                        })
    </div>
</div>
