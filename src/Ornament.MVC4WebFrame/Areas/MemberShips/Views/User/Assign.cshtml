@using Ornament
@using Ornament.MemberShip
@using Ornament.MemberShip.Dao
@using Ornament.MemberShip.Permissions
@using Ornament.Web
@using Qi.Web
@using Resources
@model Ornament.MemberShip.User
@{
    ViewBag.Title = MemberShip.AssignRoles + ":" + Model.Name;
    Layout = OrnamentContext.Configuration.BackendLayout();
    IList<UserGroup> allUserGroups = OrnamentContext.DaoFactory.MemberShipFactory.CreateUserGroupDao().GetAll();
    IList<Role> allRoles = OrnamentContext.DaoFactory.MemberShipFactory.CreateRoleDao().GetAll();

    IOrderedQueryable<Permission> allPermissions = from a in OrnamentContext.DaoFactory.MemberShipFactory.Permissions
                                                   orderby a.Name
                                                   select a;
}
@section pageTitle{
    <h6>Assignment:</h6>
}
@using (Html.BeginForm())
{
    <div class="row-fluid">

        <input type="hidden"  value="@Model.LoginId" name="LoginId"/>
        <div class="widget span8">
            <div class="navbar">
                <div class="navbar-inner">
                    <button type="submit" class="btn btn-primary">
                        <i class="icon-pencil icon-white"></i>@Basic.Save</button>
                    <a id="cancel" href="@Url.Action("Index")" class="btn">@Basic.Cancel</a>
                </div>
            </div>
            <div class="body well">

                <div class="form-horizontal span6" id="UserGroups">
                    <strong class="subtitle">@MemberShip.UserGroup</strong>
                    <div class="well-smoke body">
                        @foreach (UserGroup ug in allUserGroups)
                        {
                            <label for="@ug.Id" class="checkbox" title="@ug.Remarks">
                                <input id="@ug.Id" name="UserGroups"  value="@ug.Id" type="checkbox" checked="@Model.UserGroups.Contains(ug)"/>@ug.Name</label>
                        }
                    </div>
                </div>

                <div class="form-horizontal span6" id="Roles">
                    <strong class="subtitle">@MemberShip.Role</strong>
                    <div class="well-smoke body">
                        @foreach (Role role in allRoles)
                        {
                            string check = Model.InRole(role, false) ? "checked=\"checked\"" : "";

                            <label for="@role.Id" class="checkbox" title="@role.Remark">
                                <input id="@role.Id" name="Roles"  value="@role.Id"  type="checkbox" @check/>@role.Name</label>
                        }
                    </div>
                </div>
                <div style="clear: both"></div>
            </div>

        </div>

        <div class="widget span3">
            <div class="navbar">
                <div class="navbar-inner">
                    <h6>@MemberShip.Permission</h6>
                </div>
            </div>
            <div class="well body" id="permissionPanel">

                <ul class="nav-list nav">
                    @{
                        object resourceId = null;
                        foreach (Permission bag in allPermissions)
                        {
                            if (resourceId != bag.Resource)
                            {
                        <li class="nav-header">@bag.Resource.ToString()</li>resourceId = bag.Resource;
                            }
                        <li id="@bag.Id"><a class="tip" title="@bag.Remark"><i></i>@bag.Name</a></li>
                        }

                    }
                </ul>

            </div>
        </div>

    </div>
}


@section head{

}
@section scripts
{
    <script type="text/javascript">
        seajs.use("@Url.Content("~/MemberShips/User/Assign.js")", function(main) {
            var userGroupMap = @MvcHtmlString.Create(JsonHelper.ToJson(ViewData["userGroupRoleMap"]));
            var roleGroupMap = @MvcHtmlString.Create(JsonHelper.ToJson(ViewData["rolePermissionMap"]));
            main(userGroupMap, roleGroupMap);
        });
    </script>
}
