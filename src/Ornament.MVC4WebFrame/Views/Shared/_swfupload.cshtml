@model Ornament.MVCWebFrame.Models.SwfuploadFile
<script type="text/javascript" src="@Url.Content("~/Scripts/swfupload.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/_swfuploadHandler.js")"></script>
<script id="pending" type="text/x-jquery-tmpl">    
    <div class="alert alert-info" id="${fileId}">
        <button data-dismiss="alert" class="close" type="button">×</button>
            <div>${fileName}</div>
            <div class="progress">
                <div class="bar" style="width: 0%;">
                </div>
            </div>
        </div>
</script>
<div class="">
    <span id="spanButtonPlaceHolder"></span>
    <div id="uploading">
    </div>
    <script type="text/javascript">
        var settings_object = {
            upload_url: "@Model.UploadFileUrl",
            flash_url: "@Url.Content("~/Content/Media/swfupload.swf")",
            file_size_limit: "@Model.FileSizeKB"+"KB",
            // Button settings
            button_image_url: "@Url.Content("~/Images/upload.png")",
            button_width: "125",
            button_height: "29",
            button_placeholder_id: "spanButtonPlaceHolder",
            button_text_left_padding: 28,
            button_text_top_padding: 5,
            button_text: '<span class="theFont">Select</span>',
			button_text_style: ".theFont { font-size: 12;color:#ffffff }",
            custom_settings : {
                progressTarget : "#uploading",
                cancelButtonId : ".close"
            },
            debug:false,
            debug_handler:function (message){
                //console.log(message);
        },
            
            post_params: {
                        "ASPSESSID": "@Session.SessionID",
                        "AUTHID" : "@Request.Cookies[FormsAuthentication.FormsCookieName].Value"
            
            },
            
            // The event handler functions are defined in handlers.js
            file_queued_handler : fileQueued,
            file_queue_error_handler : fileQueueError,
            file_dialog_complete_handler : fileDialogComplete,
            upload_start_handler : uploadStart,
            upload_progress_handler : uploadProgress,
            upload_error_handler : uploadError,
            upload_success_handler : @Model.UploadSuccessCallbackFuncName,
            upload_complete_handler : uploadComplete,
            queue_complete_handler : queueComplete	// Queue plugin event
        }; 
        swfu = new SWFUpload(settings_object);
    </script>
</div>
