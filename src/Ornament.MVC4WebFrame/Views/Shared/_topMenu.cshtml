@using System.Globalization
@using System.Web.Profile
@using MvcSiteMapProvider
@using Ornament.Messages.Dao
@using Ornament.Web
@using Ornament.Web.MemberShips
@using Resources
@{
    SiteMapNodeCollection topMenus = SiteMap.RootNode.ChildNodes;

    SiteMapNode activedNode;
    if (!Html.CurrentNodeMatchParent(topMenus, out activedNode))
    {
        activedNode = SiteMap.RootNode;
    }

    var siteMapPermission = new SiteMapPermission(OrnamentContext.Current, Ornament.Context.OperatorResourceManager);
    ProfileBase profile = Profile;
    if (String.IsNullOrEmpty((string)profile["Language"]))
    {
        profile["Language"] = "en-US";
    }
    var languate = new CultureInfo(profile["Language"].ToString().Substring(0, 2), true);

    
}

@helper RenderMenu(MvcSiteMapNode node, SiteMapPermission site, SiteMapNode currentNode)
{
    if (site.IsAccessibleToUser(node))
    {
        string clz = node == currentNode ? "class=active" : "";
    <li @clz><a href="@node.Url">
        @if (node.ImageUrl != null)
        {
            <i class="@node.ImageUrl"></i>
        }
        @node.Title
    </a></li>
    }
}
@if (HttpContext.Current.User.Identity.IsAuthenticated)
{
    var searcher = new PersonalSearcher(OrnamentContext.Current.CurrentUser, OrnamentContext.Current.PersonalMessageType());
    searcher.IncludeSubType = true;

    var unReadCout = OrnamentContext.Current.MessageFactory().MessageDao.CountReadStateMessage(searcher);
    <ul class="top-menu">
        <li><a class="fullview"></a></li>
        <li><a class="showmenu"></a></li>
        <li><a href="#" title="" class="messages">
                 @if (unReadCout != 0)
                 {
                     <i class="new-message"></i>
                 }
            </a></li>
        <li class="dropdown">
            <a class="user-menu" data-toggle="dropdown">
                <img src="/Content/templates/pannonia/img/userpic.png" alt="" /><span style="min-width: 90px">@OrnamentContext.Current.CurrentUser.Name<b class="caret"></b></span></a>
            <ul class="dropdown-menu">
                <li><a href="#" title=""><i class="icon-user"></i>Profile</a></li>
                <li><a href="#" title=""><i class="icon-inbox"></i>@Basic.Messages</a>
                    @if (unReadCout != 0)
                    {
                        <span class="badge badge-info">@unReadCout</span>
                    
                    }
                </li>

                <li><a href="@Url.Action("Index", "Account", new { area = "" })" title=""><i class="icon-cog"></i>@Basic.Setting</a></li>
                <li><a href="@Url.Action("LogOff", "Account", new { area = "" })" title=""><i class="icon-remove"></i>@Basic.Logout</a></li>
            </ul>
        </li>
    </ul>
}
