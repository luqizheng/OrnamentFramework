@using MvcSiteMapProvider
@using Ornament.Web
@using Ornament.Web.MemberShips
@{

    //var nodeList = SiteMap.RootNode.ChildNodes[0].ChildNodes;
    var site = new SiteMapPermission(OrnamentContext.Current, Ornament.Context.OperatorResourceManager);
}
@helper RenderMenu(SiteMapNodeCollection rootNode)
    {
        if (rootNode == null)
        {
            return;
        }
        for (int i = 0; i < rootNode.Count; i++)
        {
            var node = (MvcSiteMapNode)rootNode[i];
            var clz = node.Equals(Html.MvcSiteMap().Provider.CurrentNode) ? "class=active" : "";
        
    <li @clz >
        @RenderHref(node,true)
        @if (node.HasChildNodes)
        {
            <ul>
                @for (int j = 0; j < node.ChildNodes.Count; j++)
                {
                    var cNode = (MvcSiteMapNode)node.ChildNodes[j];
                    var border = j == node.ChildNodes.Count - 1 ? "style=border:none" : "";
                    <li @border>
                        @RenderHref(cNode,true)
                    </li>
                }
            </ul>
        }
    </li>
        }
}
<ul class="leftMenu">
    @RenderMenu(Html.GetChildMenus(site))
</ul>
@helper RenderHref(MvcSiteMapNode node,bool defaultStyle)
    {
    <a href="@node.Url">
        @if (!String.IsNullOrEmpty(node.ImageUrl))
        {
            <i class="@node.ImageUrl"></i>
        }
        else if(defaultStyle)
        {
            <i class="icon-chevron-right"></i>
        }
        @node.Title
    </a>
}