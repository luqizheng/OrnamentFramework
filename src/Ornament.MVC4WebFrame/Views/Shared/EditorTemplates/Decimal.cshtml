@using System.ComponentModel.DataAnnotations
@model decimal?
@{
    var display = ViewData.ModelMetadata.DisplayName ?? ViewData.ModelMetadata.PropertyName;
    var inputName = ViewData.TemplateInfo.HtmlFieldPrefix;

    var minValue = 0m;
    var maxValue = 100m;


    foreach (var attr in ViewData.ModelMetadata.GetValidators(this.ViewContext))
    {
        if (attr.GetType() == typeof(RangeAttributeAdapter))
        {
            var a = attr as RangeAttributeAdapter;
            foreach (ModelClientValidationRule mcvr in a.GetClientValidationRules())
            {
                minValue = Convert.ToDecimal(mcvr.ValidationParameters["min"]);
                maxValue = Convert.ToDecimal(mcvr.ValidationParameters["max"]);
            }
            break;
        }
    }
    char[] str = minValue != 0 ? minValue.ToString("0.###").ToArray() : maxValue.ToString("0.###").ToArray();

    for (int i = 0; i < str.Length - 1; i++)
    {
        if (str[i] != '.')
        {
            str[i] = '0';
        }
    }
    str[str.Length - 1] = '1';
    var Step = Convert.ToDecimal(new string(str));

}

<div class="control-group">
    @Html.Label(inputName, display, new { @class = "control-label" })
    <div class="controls">
        @Html.TextBox("", this.Model ?? 0, new { @class = "styled" })
        @Html.ValidationMessage("")
    </div>
</div>
<script type="text/javascript">
    seajs.use(["jquerui"], function () {
        $("#@ViewData.TemplateInfo.HtmlFieldPrefix").spinner({
            numberFormat: "n",
            step: @Step,
            max:@maxValue.ToString("0.###") ,
            min:@minValue.ToString("0.###")
            
            });
    });
</script>
