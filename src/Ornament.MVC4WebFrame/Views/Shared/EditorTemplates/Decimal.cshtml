@using System.ComponentModel.DataAnnotations
@using Ornament.Validations
@using Ornament.Web.ValidationAdapter
@model decimal?
@{
    var display = ViewData.ModelMetadata.DisplayName ?? ViewData.ModelMetadata.PropertyName;
    var inputName = ViewData.TemplateInfo.HtmlFieldPrefix;

   

    var rangAttr = false;
    var stepAttr = false;
    var minValue = 0m;
    var maxValue = 100m;
    double step = 1;

    foreach (var attr in ViewData.ModelMetadata.GetValidators(this.ViewContext))
    {
        var a = attr as RangeAttributeAdapter;
        if (a != null)
        {
            foreach (ModelClientValidationRule mcvr in a.GetClientValidationRules())
            {
                minValue = Convert.ToDecimal(mcvr.ValidationParameters["min"]);
                maxValue = Convert.ToDecimal(mcvr.ValidationParameters["max"]);
            }
            rangAttr = true;
            if (stepAttr)
            {
                break;
            }
        }
        var b = attr as StepAttributeAdapter;
        if (b != null)
        {
            foreach (ModelClientValidationRule mcvr in b.GetClientValidationRules())
            {
                step = Convert.ToDouble(mcvr.ValidationParameters["step"]);
            }
            stepAttr = true;
            if (rangAttr)
            {
                break;
            }
        }

    }
    if (!stepAttr)
    {
        char[] str = minValue != 0 ? minValue.ToString("0.###").ToArray() : maxValue.ToString("0.###").ToArray();

        for (int i = 0; i < str.Length - 1; i++)
        {
            if (str[i] != '.')
            {
                str[i] = '0';
            }
        }
        str[str.Length - 1] = '1';
        step = Convert.ToDouble(new string(str));
    }
    IDictionary<string, object> htmlAttris = new Dictionary<string, object>()
    {
        {"class", "styled jqui-spinner"},
        {"jq-step", step}
    };

    if (ViewData.ContainsKey("HtmlAttributes"))
    {
        var addAttrs = ViewData["HtmlAttributes"] as IDictionary<string, object> ??
            HtmlHelper.AnonymousObjectToHtmlAttributes(ViewData["HtmlAttributes"]);
        foreach (var key in addAttrs.Keys)
        {
            htmlAttris.Add(key,addAttrs[key]);
        }

}
}




<div class="control-group">
    @Html.Label(inputName, display, new { @class = "control-label" })
    <div class="controls">
        @Html.TextBox("",ViewData.TemplateInfo.FormattedModelValue , htmlAttris)
        @Html.ValidationMessage("")
    </div>
</div>
<script type="text/javascript">seajs.use(["formInput"])</script>
