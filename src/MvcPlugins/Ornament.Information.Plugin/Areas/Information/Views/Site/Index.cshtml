@using System.Configuration
@using System.Text
@using Ornament
@using Ornament.Web
@using Ornament.Web.UI.Theme
@using Qi.Web
@{
    ViewBag.Title = "Index";
    Layout = OrnamentContext.Configuration.BackendLayout();
}


<div class="row-fluid">


    <div class="widget span4">
        <div class="navbar">
            <div class="navbar-inner">
                <h6>网站信息 </h6>
            </div>
        </div>
        <div class="well body">
            <dl class="dl-horizontal">
                <dt>服务器计算机名:</dt>
                <dd>@Server.MachineName</dd>

                <dt>服务器IP地址:</dt>
                <dd>@Request.ServerVariables["LOCAL_ADDR"]</dd>


                <dt>服务器域名:</dt>
                <dd>@base.Request.ServerVariables["SERVER_NAME"]</dd>

                <dt>服务器端口</dt>
                <dd>@base.Request.ServerVariables["SERVER_PORT"]</dd>


                <dt>服务器IIS版本</dt>
                <dd>@base.Request.ServerVariables["SERVER_SOFTWARE"]</dd>


                <dt>本文件路径</dt>
                <dd>@base.Request.ServerVariables["PATH_TRANSLATED"]</dd>


                <dt>服务器操作系统</dt>
                <dd>@Environment.OSVersion.ToString()</dd>

                <dt>服务器操作系统安装目录</dt>
                <dd>@Environment.SystemDirectory</dd>


                <dt>服务器脚本超时时间</dt>
                <dd>@base.Server.ScriptTimeout.ToString()seconds;</dd>


                <dt>浏览器的语言种类</dt>
                <dd>@base.Request.ServerVariables["HTTP_ACCEPT_LANGUAGE"]</dd>

                <dt>.NET Framework 版本</dt>
                <dd>@Environment.Version.ToString()</dd>

                <dt>服务器当前时间</dt>
                <dd>@DateTime.Now</dd>

                <dt>服务器上次启动到现在已运行</dt>
                <dd>@(((((double)Environment.TickCount) / 3600000.0)).ToString("N2") + " 小时")</dd>

                <dt>逻辑驱动器</dt>
                <dd>
                    @{
                        StringBuilder s = new StringBuilder();
                        foreach (string str in Environment.GetLogicalDrives())
                        {
                            s.Append(" " + str.TrimEnd(new char[] { '\\' }));
                        }
                    }
                    @s.ToString()
                </dd>

                <dt>CPU 总数</dt>
                <dd>@Environment.GetEnvironmentVariable("NUMBER_OF_PROCESSORS")</dd>
            </dl>
        </div>

    </div>
    <div class="span4">
        <div class="widget">
            <div class="navbar">
                <div class="navbar-inner">
                    <h6>AppSetting</h6>
                </div>
            </div>
            <div class="well body">
                <dl>
                    <dt>SupportEmail:
                    </dt>
                    <dd>
                        @ConfigurationManager.AppSettings["SupportEmail"]
                    </dd>
                    <dt>DomainUrl:
                    </dt>
                    <dd>
                        @ConfigurationManager.AppSettings["DomainUrl"]
                    </dd>

                    <dt>nhConfig:
                    </dt>
                    <dd>
                        @ConfigurationManager.AppSettings["nhConfig"]
                    </dd>


                    <dt>verifyEmailTimeout:
                    </dt>
                    <dd>
                        @ConfigurationManager.AppSettings["verifyEmailTimeout"]
                    </dd>

                    <dt>VerifyCode:
                    </dt>
                    <dd>
                        @ConfigurationManager.AppSettings["VerifyCode"]
                    </dd>
                    <dt>SiteName:
                    </dt>
                    <dd>
                        @ConfigurationManager.AppSettings["SiteName"]
                    </dd>
                </dl>

            </div>
        </div>

    </div>
</div>
@Html.Partial("_membershipSetting")
<div class="row-fluid">
    <div class="span4">
        @using (var panel = Html.Panel())
        {
            @panel.Header(@<text>

            <h6>IP Info</h6>


            </text>)

            @panel.Body(@<text>
            <dl class="dl-horizontal">
                <dt>User IP:</dt>
                <dd>
                    @{
                        var serverVariables = Request.ServerVariables;
                        string ip = serverVariables["HTTP_VIA"] != null
                            ? serverVariables["HTTP_X_FORWARDED_FOR"]
                            : serverVariables["REMOTE_ADDR"];
                    }
                    @ip
                </dd>
            </dl>

            </text>)
        }
    </div>
    <div class="span4">
        <div class="widget">
            <div class="navbar">
                <div class="navbar-inner">
                    <h6>Language</h6>
                </div>
            </div>
            <div class="well body">
                <div class="list">
                    <ul>
                        @foreach (var langage in OrnamentContext.Configuration.Languages)
                        {
                            <li>

                                @langage.Name (@langage.Key)
                                @if (langage.IsDefault)
                                {
                                    <b>Default</b>
                                }
                            </li>
                        }
                    </ul>
                    <div class="semi-widget">
                        <strong class="subtitle">Setting file</strong>
                        <div class="well-smoke body">
                            ~/App_Start/ApplicationConfig.cs
                            <br />
                            <code>
                                @foreach (var langage in OrnamentContext.Configuration.Languages)
                                {
                                    <div>
                                        context.Languages.Add(new Language(@langage.Name,@langage.Key) {IsDefault = @langage.IsDefault});
                                    </div>
                                }
                            </code>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

</div>

