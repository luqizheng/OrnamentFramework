@using System.Web.Optimization
@using Antlr.Runtime
@using Ornament.MemberShip.Security
@using Ornament.Web
@model Ornament.MemberShip.Web.Plugin.Models.Security.ResetPasswordModel

@{
    ViewBag.Title = Html.GetResourceString("RetrievePassword");
    Layout = "~/Views/Shared/_standLayout.cshtml";
    VerifyResult? result = (VerifyResult)ViewData["result"];
}

@section scripts{
    <script type="text/javascript">
        require(["/Scripts/Config.js"], function () {
            require(['@Scripts.Url("~/Scripts/modules/Accounts/ResetPassword.js")'], function (main) {
                main({
                    Success: '@Html.GetResourceString("success")',
                    Failed: '@Html.GetResourceString("Failed")',
                    Expire: '@Html.GetResourceString("Expire")',
                    NotFoundTokenId: '@Html.GetResourceString("NotFoundTokenId")'

                });
            });
        });
    </script>
}

@section headerSpace{
    <span id="extr-page-header-space"><span class="hidden-mobile">Remeber Password </span><a href="@Url.Action("Logon")" class="btn btn-danger">Login</a> </span>
}

@helper ResetPassword()
{
    <div class="row">
        <div class="col-xs-10 col-sm-10 col-md-6 col-lg-4 col-md-offset-4 col-lg-offset-4 col-xs-offset-1 col-sm-offset-1">
            <div class="well no-padding">
                <form action="@Url.Action("ResetPassword")" class="smart-form client-form" method="POST">
                    <header>
                        @Html.GetResourceString("RetrievePassword")
                    </header>

                    <fieldset>

                        <section>
                            <label class="label">@Html.DisplayNameFor(x => x.PasswordModel.NewPassword)</label>
                            <label class="input">
                                <i class="icon-append fa fa-user"></i>
                                @Html.PasswordFor(x => x.PasswordModel.NewPassword)
                                <b class="tooltip tooltip-top-right"><i class="fa fa-user txt-color-teal"></i>@Html.GetResourceString("NewPassword")</b>
                                @Html.ValidationMessageFor(_ => _.PasswordModel.NewPassword)
                            </label>

                        </section>

                        <section>
                            <label class="label">@Html.DisplayNameFor(x => x.PasswordModel.ConfirmPassword)</label>
                            <label class="input">
                                <i class="icon-append fa fa-lock"></i>
                                @Html.PasswordFor(x => x.PasswordModel.ConfirmPassword)
                                <b class="tooltip tooltip-top-right"><i class="fa fa-lock txt-color-teal"></i>@Html.GetResourceString("ConfirmPassword")</b>
                                @Html.ValidationMessageFor(_ => _.PasswordModel.ConfirmPassword)
                            </label>
                        </section>
                        @Html.HiddenFor(x => x.Id)
                        @Html.HiddenFor(x => x.TokenId)
                    </fieldset>
                    <footer>
                        <button type="submit" class="btn btn-primary">
                            @Html.GetResourceString("Submit")
                        </button>
                    </footer>
                </form>

            </div>
        </div>
    </div>
}
@helper Failes(VerifyResult result)
{
    <div class="row">
    <h3 class="col-md-2 col-md-offset-4">
        @Html.GetResourceString(result.ToString())
    </h3>    
    </div>
    
}

@if (result != null)
{

    switch (result.Value)
    {
        case VerifyResult.Success:
            @ResetPassword();
            break;
        default:
            @Failes(result.Value);
            break;
    }
}
else
{
    <script>
        location = "/";
    </script>
}