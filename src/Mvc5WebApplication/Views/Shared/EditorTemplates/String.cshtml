@model string
@{
    string display = ViewData.ModelMetadata.DisplayName ?? ViewData.ModelMetadata.PropertyName;
    string inputName = string.Empty; // ViewData.TemplateInfo.HtmlFieldPrefix;    

    IDictionary<string, object> htmlAttris = new Dictionary<string, object>();
    if (ViewData.ContainsKey("HtmlAttributes"))
    {
        htmlAttris = ViewData["HtmlAttributes"] as IDictionary<string, object> ?? HtmlHelper.AnonymousObjectToHtmlAttributes(ViewData["HtmlAttributes"]);
    }
    if (htmlAttris.ContainsKey("class"))
    {
        htmlAttris["class"] = htmlAttris["class"] + " col-md-12";
    }
    else
    {
        htmlAttris.Add("class", "col-md-12");
    }
    foreach (ModelValidator attr in ViewData.ModelMetadata.GetValidators(ViewContext))
    {
        var b = attr as StringLengthAttributeAdapter;
        if (b != null)
        {
            foreach (ModelClientValidationRule mcvr in b.GetClientValidationRules())
            {
                object length = mcvr.ValidationParameters["max"];
                htmlAttris.Add("maxlength", length);
            }
            break;
        }
    }
}
@Html.TextBox(inputName, Model, htmlAttris)
