<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="alertMsg_Confirm_Password_Not_Equal_New_password" xml:space="preserve">
    <value>Password doesn't match the confirmation.</value>
  </data>
  <data name="alertMsg_duplicate_Email" xml:space="preserve">
    <value>This email has been used by another user.</value>
  </data>
  <data name="alertMsg_duplicate_loginId" xml:space="preserve">
    <value>Logind is exist, please choice another one.</value>
  </data>
  <data name="alertMsg_OldPasswordNotRight" xml:space="preserve">
    <value>Current Password isn't right.</value>
  </data>
  <data name="alertMsg_Password_length_not_right" xml:space="preserve">
    <value>Password is too short (minimum is {0} characters).</value>
  </data>
  <data name="alert_Require_ConfirmPassword" xml:space="preserve">
    <value>Please input confirm password.</value>
  </data>
  <data name="AssignRoles" xml:space="preserve">
    <value>Assign Roles</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Password agan</value>
  </data>
  <data name="CreateTime" xml:space="preserve">
    <value>Create time</value>
  </data>
  <data name="CurrentPassword" xml:space="preserve">
    <value>Current Password</value>
  </data>
  <data name="error_LoginError" xml:space="preserve">
    <value>Login id or Password is not match.</value>
  </data>
  <data name="error_missingEmailAddress" xml:space="preserve">
    <value>Please input email.</value>
  </data>
  <data name="error_MissLoginId" xml:space="preserve">
    <value>Please input login id.</value>
  </data>
  <data name="error_MissPassword" xml:space="preserve">
    <value>Please input password.</value>
  </data>
  <data name="error_notMatchVerifyCode" xml:space="preserve">
    <value>Verify Code not match.</value>
  </data>
  <data name="error_UserIsLockout" xml:space="preserve">
    <value>User is lockout.</value>
  </data>
  <data name="error_UserIsNotApproved" xml:space="preserve">
    <value>User is not approved.</value>
  </data>
  <data name="input_password_again" xml:space="preserve">
    <value>Confirm can't be blank.</value>
  </data>
  <data name="label_AccountOrEmail" xml:space="preserve">
    <value>Account Or Email</value>
  </data>
  <data name="Org_OrgCount_Child_Org_s_Count" xml:space="preserve">
    <value>Child Org's Count</value>
  </data>
  <data name="PermissionName" xml:space="preserve">
    <value>Permission Name</value>
  </data>
  <data name="RegistryTime" xml:space="preserve">
    <value>Registry time</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="VerifyCode" xml:space="preserve">
    <value>Verify Code</value>
  </data>
  <data name="VerifyEmail" xml:space="preserve">
    <value>Verify Email if changed</value>
  </data>
  <data name="AccountInfo" xml:space="preserve">
    <value>Setting</value>
  </data>
  <data name="alertMsg_RequireAccountOrEmail" xml:space="preserve">
    <value>Please input login ID or email address.</value>
  </data>
  <data name="alertMsg_requireVerifyCode" xml:space="preserve">
    <value>Please input verify code.</value>
  </data>
  <data name="alertMsg_Require_NewPassword" xml:space="preserve">
    <value>Password can't be blank.</value>
  </data>
  <data name="alertMsg_Require_OldPassword" xml:space="preserve">
    <value>Current Password can't be blank.</value>
  </data>
  <data name="altMessage_EmailFormatNotCorrect" xml:space="preserve">
    <value>Please input correct email address.</value>
  </data>
  <data name="Assigment" xml:space="preserve">
    <value>Assign</value>
  </data>
  <data name="AssignUserGroup" xml:space="preserve">
    <value>Assign Users</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change Password</value>
  </data>
</root>