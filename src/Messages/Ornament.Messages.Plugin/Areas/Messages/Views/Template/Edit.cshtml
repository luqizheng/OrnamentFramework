@using Ornament
@using Ornament.Models
@using Ornament.Web
@using Ornament.Web.UI.Theme
@using Qi.Web
@using Basic = Ornament.Properties.Resources
@model Ornament.Messages.Plugin.Areas.Messages.Models.Messages.MessageTemplateModel

@{
    ViewBag.Title = Html.GetEmbededResourceString("title");
    Layout = OrnamentContext.Configuration.Layout();
    string contents = "{}";


    if (Model != null)
    {
        var content = from a in Model.Contents.Values
                      select new
                      {
                          subject = a.Subject,
                          content = a.Value,
                          language = a.Language
                      };
        contents = JsonHelper.ToJson(content.ToDictionary(s => s.language));
    }
}

@section pageTitle
{
    <h5>@Html.GetEmbededResourceString("title")</h5>
}
 <form id="editTemp" ms-controller="editTemp" method="POST" action="@Url.Action("Edit")" class="form-horizontal">
@using (Panel panel = Html.Panel())
{
    @panel.Header(@<text>
     <button>@Ornament.Properties.Resources.Save</button>
    </text>)
    
    @panel.Body(@<text>

   

        <ul class="nav nav-tabs">
            <li class="active">
                <a data-toggle="tab" href="#tab7">
                    <i class="fa fa-list"></i>@Html.GetEmbededResourceString("Tab_title_Basic")
                </a>
            </li>
            <li class="">
                <a data-toggle="tab" href="#tab8"><i class="fa fa-pencil"></i>@Html.GetEmbededResourceString("Tab_title_Content")</a>
            </li>
        </ul>
        <div class="tab-content">

            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Id)
            @Html.ValidationSummary(true)
            <div id="tab7" class="tab-pane active">
                <div class="col-lg-12 col-xs-12 col-sm-12">
                    @* 如果是内置，一定是不能呢改名字，因为是有程序初始化生成的 *@
                    <div class="form-group">
                        @Html.LabelFor(s => s.Name)
                        @Html.TextBoxFor(s => s.Name, "", new
                        {
                            @class = "form-control",
                            HtmlAttributes = new Dictionary<string, object>
                            {
                                {"ms-duplex", "Name"}
                            }
                        })

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(s => s.Remark)
                        @Html.TextAreaFor(s => s.Remark, 18, 29,
                            new
                            {
                                @class = "form-control",
                                HtmlAttributes = new Dictionary<string, object>
                                {
                                    {"ms-duplex", "Remark"}
                                }
                            })

                    </div>
                </div>
            </div>
            <div id="tab8" class="tab-pane">
                <div class="col-lg-12 col-xs-12 col-sm-12">
                    <div class="form-group">
                        <label for="Language">语言:</label>
                        <select id="Language" class="form-control" ms-duplex-text="Language">
                            @{
                                LanguageCollection langs = OrnamentContext.Configuration.Languages;
                                foreach (Language lang in langs)
                                {
                                <option value="@lang.Key">@lang.Name ( @lang.Key )</option>
                                }
                            }
                        </select>

                    </div>
                    <div class="form-group">
                        <label for="subject">Subject</label>
                        <input id="subject" class="form-control" type="text" style="width: 100%"
                            ms-duplex="content.Subject" />
                    </div>
                    <div class="form-group">
                        @Html.EditorFor(s => s.Content, new
                                     {
                                         HtmlAttributes = new Dictionary<string, object>
                                         {
                                             {"ms-duplex", "content.Value"}
                                         }
                                     })
                    </div>
                </div>
            </div>

        </div>
 
    </text>)
    
}   </form>




@section scripts {

    <script type="text/javascript">


        require(["@Scripts.Url("~/messages/scripts/template/edit.js")"], function (init) {
            var contents=@Html.Raw(JsonHelper.ToJson(this.Model.Contents));
            var template = {
                Remark:  '@Html.Raw(JsonHelper.ToJson(Model.Remark))',
                Name: '@this.Model.Name',
                Contents:contents
            }

            init.init(template);
            clearPageVariable.push(init.clear());
        });
    </script>
}