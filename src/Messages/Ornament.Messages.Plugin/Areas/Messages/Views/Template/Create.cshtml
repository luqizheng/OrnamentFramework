@using Ornament
@using Ornament.Web
@using Ornament.Web.UI.Theme
@using Qi.Web
@using Basic = Ornament.Properties.Resources
@model Ornament.Messages.Plugin.Areas.Messages.Models.Messages.MessageTemplateModel

@{
    ViewBag.Title = Html.GetEmbededResourceString("title");
    Layout = OrnamentContext.Configuration.BackendLayout();
    string contents = "{}";


    if (Model != null)
    {
        var content = from a in Model.Contents.Values
                      select new
                      {
                          subject = a.Subject,
                          content = a.Value,
                          language = a.Language
                      };
        contents = JsonHelper.ToJson(content.ToDictionary(s => s.language));
    }
    var nodifyList = from a in OrnamentContext.DaoFactory.MessageDaoFactory.NotifyTypeDao.GetAll()
                     select new SelectListItem()
                         {
                             Text = a.Name,
                             Value = a.Id
                         };
}

@section pageTitle
{
    <h5>@Html.GetEmbededResourceString("title")</h5>
}
@using (Html.BeginForm("Create", "Template", FormMethod.Post, new { @class = "form-horizontal" }))
{

    using (var panel = Html.Panel())
    {
    @panel.Header(@<text>
    <input type="submit" value="@Basic.Save" class="btn btn-info" />
    <a href="@Url.Action("Index")" class="btn">@Basic.Cancel</a>
    </text>)

    
    @panel.Body(@<text>



    <ul class="nav nav-tabs">
        <li class="active"><a data-toggle="tab" href="#tab7"><i class="fam-layout-content"></i>@Html.GetEmbededResourceString("Tab_title_Basic")</a></li>
        <li class=""><a data-toggle="tab" href="#tab8"><i class=" fam-pencil-add"></i>@Html.GetEmbededResourceString("Tab_title_Content")</a></li>
    </ul>
    <div class="tab-content">

        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Id)
        @Html.ValidationSummary(true)
        <div id="tab7" class="tab-pane active">
            <div class="row-fluid">
                @* 如果是内置，一定是不能呢改名字，因为是有程序初始化生成的 *@


                @Html.EditorFor(s => s.Name)


                <div class="control-group">
                    @Html.LabelFor(s => s.Notify, new { @class = "control-label span12" })
                    <div class="controls">
                        <select name="Notify" id="Notify">
                            @foreach (var notify in OrnamentContext.DaoFactory.MessageDaoFactory.NotifyTypeDao.GetAll())
                            {

                                                 
                                <option value="@notify.Id">@notify.Name</option>
                                                 
                            }
                        </select>
                        @Html.ValidationMessageFor(s => s.Notify)
                    </div>
                </div>
                @Html.EditorFor(model => model.Remark)
            </div>
        </div>
        <div id="tab8" class="tab-pane">

            <div class="control-group">
                <label class="control-label">Language:</label>
                <div class="controls">
                    <select id="Language">
                        @{
                            var langs = OrnamentContext.Configuration.Languages;
                            foreach (var lang in langs)
                            {
                            <option value="@lang.Key">@lang.Name ( @lang.Key )</option>
                            }
                        }
                    </select>
                </div>


            </div>
            <div class="control-group">
                <label class="control-label">Subject</label>
                <div class="controls">
                    <input id="subject" class="styled" type="text" style="width: 100%" />
                </div>
            </div>
            <div class="control-group">
                <textarea name="editor" id="editor"></textarea>
            </div>

        </div>
    </div>

    </text>)
    }
}




@section scripts {

    <script type="text/javascript">
        var content = @Html.Raw(contents)
    seajs.use("@SeajsBundles.ScriptsSeajs.RenderUrl("/Messages/Scripts/Template/create.js")")
    </script>
}
