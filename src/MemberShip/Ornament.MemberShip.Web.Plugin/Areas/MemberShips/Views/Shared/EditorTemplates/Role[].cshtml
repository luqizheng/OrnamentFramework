@using Ornament
@using Ornament.MemberShip
@using Ornament.MemberShip.Dao
@using Ornament.MemberShip.Plugin.Models
@model Ornament.MemberShip.Role[]
@{

    string display = ViewData.ModelMetadata.DisplayName ?? ViewData.ModelMetadata.PropertyName;
    IEnumerable<string> ids = Model != null ? Model.Select(s => s.Id) : new String[0];
 
    IList<Role> roles = OrnamentContext.DaoFactory.GetDaoFactory<IMemberShipFactory>()
        .CreateResourceDao()
        .FindResources<Role>(OrnamentContext.MemberShip.CurrentUser(), RoleOperator.Assign);

    IDictionary<string, object> htmlAttris;
    if (ViewData.ContainsKey("HtmlAttributes"))
    {
        htmlAttris = ViewData["HtmlAttributes"] as IDictionary<string, object>;
        if (htmlAttris == null)
        {
            htmlAttris = HtmlHelper.AnonymousObjectToHtmlAttributes(ViewData["HtmlAttributes"]);
        }
    }
    else
    {
        htmlAttris=new Dictionary<string, object>();
    }
}
@foreach (Role a in roles)
{
    <label class="checkbox-inline" title="@a.Remarks">
        @Html.CheckBox("",htmlAttris)
        @a.Name
    </label>
    
}
