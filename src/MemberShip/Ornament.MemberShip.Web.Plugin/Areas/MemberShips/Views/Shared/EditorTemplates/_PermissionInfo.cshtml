@model Ornament.MemberShip.Plugin.Models.Memberships.Partials.PermissionInfo


<div class="form-horizontal">


    <div class="form-group">
        <label class="col-md-2">@Html.DisplayNameFor(s => s.Deny)</label>
        <div class="col-md-10">
            <label class="toggle ">
                @Html.EditorFor(model => model.Deny, new { HtmlAttributes = new { @class = "form-control onoffswitch-checkbox" } })
                <label class="onoffswitch-label" for="Deny">
                    <span class="onoffswitch-inner" data-swchon-text="YES" data-swchoff-text="NO"></span>
                    <span class="onoffswitch-switch"></span>
                </label>
                @Html.ValidationMessageFor(model => model.Deny)
            </label>
        </div>
    </div>

    <div class="form-group">
        <label class="col-md-2">@Html.DisplayNameFor(s => s.IsLock)</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.IsLock, new { HtmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IsLock)
        </div>
    </div>

    <div class="form-group">
        <label class="col-md-2">@Html.DisplayNameFor(s => s.Org)</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Org, new { HtmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Org)
        </div>
    </div>

    <div class="form-group">
        <label class="col-md-2">@Html.DisplayNameFor(s => s.Roles)</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Deny, new { HtmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Roles)
        </div>
    </div>

    <div class="form-group">
        <label class="col-md-2">@Html.DisplayNameFor(s => s.UserGroups)</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserGroups, new { HtmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserGroups)
        </div>
    </div>



    <div class="form-group">
        <label class="col-md-2">@Html.DisplayNameFor(s => s.Remark)</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Remark, new { HtmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Remark)
        </div>
    </div>

</div>
