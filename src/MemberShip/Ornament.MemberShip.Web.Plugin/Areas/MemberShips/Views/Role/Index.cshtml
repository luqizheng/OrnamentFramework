@using Ornament
@using Ornament.MemberShip.Plugin.Models
@using Ornament.MemberShip.Properties
@using Ornament.Web
@using Ornament.Web.UI.Theme
@model IEnumerable<Ornament.MemberShip.Role>
@{
    ViewBag.Title = Resources.Role;
    Layout = OrnamentContext.Configuration.Layout();
    bool hasDelete = OrnamentContext.MemberShip.HasRight("Role", RoleOperator.Delete);
    bool hasModify = OrnamentContext.MemberShip.HasRight("Role", RoleOperator.Modify);
    var listPanelOptions = new PanelOption
    {
        ColorButton = true,
        HtmlAttributes = new Dictionary<string, object>
        {
            {"ms-controller", "index"}
        }
    };
}
<style type="text/css">
    .selected {
        background: none repeat scroll 0 0 #fddfb3 !important;
        border: 1px solid #faa937;
        color: #333 !important;
    }
</style>
@using (Panel panel = Html.Panel(listPanelOptions, "col-md-5 col-lg-4", "col-xs-4", "col-sm-4"))
{
    @panel.Header(@<text>
    <h2>@Html.GetEmbededResourceString("Role_List")</h2>
    <div class="widget-toolbar">
        <button class="btn btn-primary btn-xs" ms-click="create">
            <i class="fa fa-plus"></i>
        </button>
    </div>
    </text>)
    @panel.Body(@<text>

    <div id="listRole" class="dd">
        <ul class="dd-list">
            <ol ms-repeat-el="roles" class="dd-item">
                @{
                    string handler = hasModify ? "ms-click=edit" : "";
                }
                <div class="dd-handle" style="cursor: pointer" @handler ms-attr-title="el.Remarks" ms-class-1="selected:curRole!=null && el.Id==curRole.Id">
                    @if (hasDelete)
                    {
                        <button ms-click="del" title="@Ornament.Properties.Resources.Delete" class="btn btn-danger btn-xs">
                            <i class="fa-remove fa"></i>
                        </button>
                    }
                    <span ms-text="el.Name"></span>
                </div>

            </ol>
        </ul>
    </div>
    <div ms-widget="pager">
    </div>



    </text>, new Dictionary<string, object>()
                        {
                             {"ms-class","widget-body-ajax-loading:loading"}
                        })
}

@using (Panel panel = Html.Panel(new PanelOption()
{
    HtmlAttributes = new Dictionary<string, object>()
    {
        {"ms-controller","edit"},
    }
},

    "col-md-7", "col-lg-8", "col-xs-8", "col-sm-8"))
{
    @panel.Header(@<text><h2 ms-text="title">编辑</h2></text>, new Dictionary<string, object>())

    @panel.Body(@<text>

    <form class="form-horizontal" method="POST" id="roleEdit" ms-submit="save">

        <div class="widget-body-toolbar">

            <button class="btn btn-primary" type="submit" ms-attr-disabled="!editing" ms-text="saveBtnText">@Ornament.Properties.Resources.Save</button>
            <button class="btn btn-default" type="button" ms-click="reset" ms-attr-disabled="!editing" ms-visiable="!IsCreated">@Ornament.Properties.Resources.Reset</button>
            <button class="btn btn-default" type="button" ms-click="cancel" ms-attr-disabled="!editing">@Ornament.Properties.Resources.Cancel</button>
        </div>
        @Html.Partial("_Edit")
    </form>
    </text>, new Dictionary<string, object>()
                        {
                             {"ms-class-1","widget-body-ajax-loading:loading"}
                        })
}




@section scripts{
    
    
    <script type="text/javascript">
        require(['@Scripts.Url("/MemberShips/Scripts/Role/index.js")'], function (main) {
            var message = {
                createRole: '@Html.GetEmbededResourceString("CreateRole")',
                editRole: '@Html.GetEmbededResourceString("EditRole")',
                saveBtnEdit: '@Ornament.Properties.Resources.Save',
                saveBtnCreate:'@Ornament.Properties.Resources.Create'
            };
            main.init(message);
            clearPageVariable.push(main.clear);
        });
    </script>
}