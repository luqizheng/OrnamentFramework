@using Qi
@using Qi.Attendance
@model Qi.Attendance.Employee
@Html.HiddenFor(model => model.Id)
@{
    var groups = (IEnumerable<EmployeeGroup>)ViewBag.Groups;
}
<script type="text/javascript">
    require(['valid']);
</script>
<div class="control-group">
    @Html.LabelFor(s => s.Name, new { @class = "control-label" })
    <div class="controls">
        @Html.TextBoxFor(s => s.Name, new { placeholder = "雇员名称" }) @Html.ValidationMessageFor(s => s.Name)
    </div>
</div>
<div class="control-group">
    <label class="control-label">
        雇员状态</label>
    <div class="controls">
        <select name="EmployeeState">
            @foreach (var val in EnumHelper.GetDescriptionList<EmployeeState>())
            {
                
                <option value="@val.Value" @(val.Value == EmployeeState.Employed ? "selected=\"selected\"" : "")>@val.Key</option>
                
            }
        </select>
    </div>
</div>
<div class="control-group">
    @Html.LabelFor(s => s.EmployeeGroup, new { @class = "control-label" })
    <div class="controls">
        @Html.DropDownListFor(s => s.EmployeeGroup, from eg in groups
                                                    select new SelectListItem
                                                        {
                                                            Text = eg.Name,
                                                            Value = eg.Id.ToString(),
                                                            Selected = Model != null && eg.Equals(Model.EmployeeGroup)
                                                        }, new Dictionary<string, object> { { "name", "EmployeeGroup.Id" } })
    </div>
</div>
