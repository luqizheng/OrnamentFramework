@using Ornament.MVCWebFrame.Models
@using Qi
@using QiProject
@using QiProject.Defects
@model QiProject.Defects.Defect
@{
    var projects = (IEnumerable<Project>)ViewData["Projects"] ?? new List<Project>();
}
<div class="control-group warning">
    @Html.LabelFor(mdoel => mdoel.Owener, new { @class = "control-label" })
    <div class="controls">
        <select name="Owener">
            @foreach (var item in projects)
            {
                <option value="@item.Id.ToString()">@item.Name</option>
            }
        </select>
        @Html.ValidationMessageFor(model => model.Owener)
        <span class="help-inline">Choice Project !</span>
    </div>
</div>
<div class="control-group">
    <div class="controls">
        <select name="Priority">
            @foreach (DefectPriority priority in Enum.GetValues(typeof(DefectPriority)))
            {
                <option vlaue="@Convert.ToInt32(priority)">@priority.ToDescription()</option>
            }
        </select>
    </div>
</div>
<div class="control-group">
    @Html.LabelFor(model => model.Summary, new { @class = "control-label" })
    <div class="controls">
        @Html.TextBoxFor(model => model.Summary, new { @class = "span6" })
        @Html.ValidationMessageFor(model => model.Summary)
    </div>
</div>
<div class="control-group">
    @Html.LabelFor(model => model.Reproducible, new { @class = "control-label" })
    <div class="controls">
        @Html.EditorFor(model => model.Reproducible)
        @Html.ValidationMessageFor(model => model)
    </div>
</div>
<div class="control-group">
    @Html.LabelFor(model => model.Description, new { @class = "control-label" })
    <div class="controls">
        @Html.Partial("_editor", new Editor()
                {
                    Content = this.Model.Description,
                    EditorName = "Description",
                    Height = "450px",
                    Width = "750px"
                })
        @Html.ValidationMessageFor(model => model.Description)
    </div>
</div>
